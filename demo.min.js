class Vector{constructor(x,y){this.x=x;this.y=y}}var w=window.innerWidth,h=window.innerHeight,d=20,e=0.15,f=0.8,g=new Vector(Math.floor(w/d), Math.floor(h/d)),c,j=[],k=[],l=document.getElementById('c'),m=()=>{c.clearRect(0,0,w,h);for(const p of j){p.update(k);p.draw(c)}requestAnimationFrame(m)};class Particle{constructor(){this.reset()}reset(){this.pos=new Vector(Math.floor(Math.random()*w), Math.floor(Math.random()*h));this.velocityMultiplier=Math.floor(1+Math.random()*4);this.trail=[{...this.pos}];this.trailLen=Math.floor(30+Math.random()*200)}draw(c){c.beginPath();c.moveTo(this.trail[0].x,this.trail[0].y);for(const p of this.trail)c.lineTo(p.x,p.y);c.stroke()}update(a){if(this.trail.length==this.trailLen){this.trail.shift();this.trailLen--;!this.trailLen&&this.reset();return}var b=a[Math.floor(this.pos.y/d)*g.x+Math.floor(this.pos.x/d)];this.pos.x+=Math.cos(b)*this.velocityMultiplier;this.pos.y+=Math.sin(b)*this.velocityMultiplier;this.trail.push({...this.pos});while (this.trail.length>this.trailLen)this.trail.shift()}}for(let y=0;y<=g.y;y++)for(let x=0;x<=g.x;x++)k.push((Math.cos(x*e)+Math.sin(y*e))*f);c=l.getContext('2d');l.width=w;l.height=h;c.fillStyle='red';c.strokeStyle='red';c.lineWidth=2;for(let i=0;i<420;i++)j.push(new Particle());m();
